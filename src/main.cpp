#include <SFML/Graphics.hpp>
#include "game.hpp"
#include "board.hpp"

int main() {
    sf::RenderWindow window(sf::VideoMode(900, 900), "Chess"); // —Å–æ–∑–¥–∞–µ–º –æ–∫–æ—à–µ—á–Ω–æ —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å 900 –Ω–∞ 900 –ø–∏–∫—Å–µ–ª–µ–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ Chess

    const float CELLSIZE = 100.f; // —Ä–∞–∑–º–µ—Ä –∫–ª–µ—Ç–∫–∏
    const float OFFSETX = 50.f; // –æ—Ç—Å—Ç–ø—É–ø –¥–ª—è –±—É–∫–≤ —Å–ª–µ–≤–∞
    const float OFFSETY = 50.f; // –æ—Ç—Å—Ç—É–ø –¥–ª—è —Ü–∏—Ñ—Ä —Å–Ω–∏–∑—É

    // —Å–æ–∑–¥–∞–µ–º –¥–æ—Å–∫—É
    sf::RectangleShape boardRectangles[8][8];
    initializeBoardRectangles(boardRectangles, CELLSIZE, OFFSETX, OFFSETY);

    sf::Font font; // —à—Ä–∏—Ñ—Ç
    if (!loadFont(font)) {
        return -1; // –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è —Ç–æ :(
    }

    //–±—É–∫–≤—ã
    sf::Text letters[8];
    createLetters(letters, font, CELLSIZE, OFFSETX, OFFSETY);

    //—Ü–∏—Ñ–æ—ã
    sf::Text numbers[8];
    createNumbers(numbers, font, CELLSIZE, OFFSETY);

    // –º–∞–ø–∞ —Ç–µ–∫—Å—Ç—É—Ä –∏ –≤–µ–∫—Ç–æ—Ä —Ñ–∏–≥—É—Ä
    std::map<std::string, sf::Texture> textures;
    std::vector<std::unique_ptr<figure>> figures;
    setupFigures(textures, figures, OFFSETX, OFFSETY, CELLSIZE); // —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ–∏–≥—É—Ä—ã –≤ gui

    bool isFigureSelected = false; // —Ñ–∏–≥—É—Ä–∞ —Å–µ–π—á–∞—Å –≤—ã–±—Ä–∞–Ω–∞ –¥–ª—è —Ö–æ–¥–∞
    figure* selectedFigure = nullptr; 
    std::vector<std::pair<int, int>> possibleMoves; // –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ö–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–∏–≥—É—Ä—ã

    sf::RectangleShape lastMoveFrom(sf::Vector2f(CELLSIZE, CELLSIZE)); // –∫–≤–∞–¥—Ä–∞—Ç–∏–∫ –æ—Ç–∫—É–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥
    sf::RectangleShape lastMoveTo(sf::Vector2f(CELLSIZE, CELLSIZE)); // –∫–≤–∞–¥—Ä–∞—Ç–∏–∫ –∫—É–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥
    lastMoveFrom.setFillColor(sf::Color(0, 255, 0, 80)); // —Ü–≤–µ—Ç
    lastMoveTo.setFillColor(sf::Color(0, 255, 0, 80)); // —Ü–≤–µ—Ç
    bool hasMoved = false; // —Ñ–ª–∞–≥ –±—ã–ª –ª–∏ —É–∂–µ —Ö–æ–¥ –∞ —Ç–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–≥–¥–∞ —Ö–æ–¥–∞ –Ω–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ —ç—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞ —É–≥–æ–ª —É–µ–∑–∂–∞–ª–∏ –∏ –∑–∞–∫—Ä—ã–≤–∞–ª–∏ —á–∞—Å—Ç—å –æ–∫–Ω–∞

    Board* board = new Board();  // —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–≤–æ–µ–π –¥–æ—Å–∫–∏ (‚ùÅ¬¥‚ó°`‚ùÅ)
    board->initialize(); // —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–≥—É—Ä –Ω–∞ —Ç–≤–æ–µ–π –¥–æ—Å–∫–µ (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª

    while (window.isOpen()) { // –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–∫–∞ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        processEvents(window, board, figures, isFigureSelected, selectedFigure, possibleMoves, lastMoveFrom, lastMoveTo, hasMoved, OFFSETX, OFFSETY, CELLSIZE); // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫ –º—ã—à–∏ –∏ —Ç–¥

        window.clear(sf::Color(128,128,128)); // –æ—Ç—á–∏—â–∞–µ–º –æ–∫–Ω–æ —á—Ç–æ–±—ã –æ–Ω–æ –æ–±–Ω–æ–≤–ª—è–ª–æ—Å—å —Ü–≤–µ—Ç –≤ —Å–∫–æ–±–∫–∞—Ö —ç—Ç–æ —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ (—Å–µ—Ä—ã–π)

        drawBoardAndLabels(window, boardRectangles, letters, numbers); // —Ä–∏—Å—É–µ–º –¥–æ—Å–∫—É –∏ —Ü–∏—Ñ—Ä—ã –±—É–∫–≤—ã
        if (hasMoved) { // –µ—Å–ª–∏ —Ö–æ–¥ –±—ã–ª —Ä–∏—Å—É–µ–º –∑–µ–ª–µ–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç—ã –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ö–æ–¥—É
            window.draw(lastMoveFrom);
            window.draw(lastMoveTo);
        }
        drawFigures(window, figures); // —Ä–∏—Å—É–µ–º —Ñ–∏–≥—É—Ä—ã

        if (isFigureSelected) { // –µ—Å–ª–∏ —Ñ–∏–≥—É—Ä–∞ –≤—ã–±—Ä–∞–Ω–∞
            drawMoveHighlights(window, possibleMoves, *board, selectedFigure, OFFSETX, OFFSETY, CELLSIZE); // —Ä–∏—Å—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ö–æ–¥—ã
        }


        window.display(); // –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –æ–∫–Ω–æ —á—Ç–æ–±—ã
    }

    delete board; // –æ—Ç—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å –æ—Ç —Ç–≤–æ–µ–π –¥–æ—Å–∫–∏ üò•üò•üò£üò£üò•
    return 0;
}